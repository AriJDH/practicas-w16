-- MySQL Script generated by MySQL Workbench
-- Thu Aug 25 15:56:13 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema bibloteca
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `bibloteca` ;

-- -----------------------------------------------------
-- Schema bibloteca
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bibloteca` DEFAULT CHARACTER SET utf8 ;
USE `bibloteca` ;

-- -----------------------------------------------------
-- Table `bibloteca`.`Book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bibloteca`.`Book` ;

CREATE TABLE IF NOT EXISTS `bibloteca`.`Book` (
  `BookId` INT NOT NULL AUTO_INCREMENT,
  `BookTitle` VARCHAR(45) NOT NULL,
  `BookPublisher` VARCHAR(45) NOT NULL,
  `BookArea` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`BookId`),
  UNIQUE INDEX `idBook_UNIQUE` (`BookId` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibloteca`.`Author`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bibloteca`.`Author` ;

CREATE TABLE IF NOT EXISTS `bibloteca`.`Author` (
  `AuthorId` INT NOT NULL AUTO_INCREMENT,
  `AuthorName` VARCHAR(45) NOT NULL,
  `AuthorNationality` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`AuthorId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibloteca`.`BookAuthor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bibloteca`.`BookAuthor` ;

CREATE TABLE IF NOT EXISTS `bibloteca`.`BookAuthor` (
  `BookAuthorId` INT NOT NULL AUTO_INCREMENT,
  `BookId` INT NOT NULL,
  `AuthorId` INT NOT NULL,
  INDEX `fk_Book_has_Author_Author1_idx` (`AuthorId` ASC) VISIBLE,
  INDEX `fk_Book_has_Author_Book_idx` (`BookId` ASC) VISIBLE,
  PRIMARY KEY (`BookAuthorId`),
  CONSTRAINT `fk_Book_has_Author_Book`
    FOREIGN KEY (`BookId`)
    REFERENCES `bibloteca`.`Book` (`BookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_has_Author_Author1`
    FOREIGN KEY (`AuthorId`)
    REFERENCES `bibloteca`.`Author` (`AuthorId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bibloteca`.`Student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bibloteca`.`Student` ;

CREATE TABLE IF NOT EXISTS `bibloteca`.`Student` (
  `StudentId` INT NOT NULL AUTO_INCREMENT,
  `StudentName` VARCHAR(45) NOT NULL,
  `StudentLastname` VARCHAR(45) NOT NULL,
  `StudentAddress` VARCHAR(45) NOT NULL,
  `StudentCarreer` VARCHAR(45) NOT NULL,
  `StudentAge` INT NOT NULL,
  PRIMARY KEY (`StudentId`),
  UNIQUE INDEX `StudentId_UNIQUE` (`StudentId` ASC) VISIBLE)
ENGINE = InnoDB
PACK_KEYS = Default
ROW_FORMAT = Default;


-- -----------------------------------------------------
-- Table `bibloteca`.`Borrow`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `bibloteca`.`Borrow` ;

CREATE TABLE IF NOT EXISTS `bibloteca`.`Borrow` (
  `BorrowId` INT NOT NULL AUTO_INCREMENT,
  `BookId` INT NOT NULL,
  `StudentId` INT NOT NULL,
  `BorrowStartDate` DATE NOT NULL,
  `BorrowReturnDate` DATE NOT NULL,
  `BorrowReturned` TINYINT(1) NOT NULL DEFAULT 0,
  INDEX `fk_Book_has_Student_Student1_idx` (`StudentId` ASC) VISIBLE,
  INDEX `fk_Book_has_Student_Book1_idx` (`BookId` ASC) VISIBLE,
  PRIMARY KEY (`BorrowId`),
  CONSTRAINT `fk_Book_has_Student_Book1`
    FOREIGN KEY (`BookId`)
    REFERENCES `bibloteca`.`Book` (`BookId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Book_has_Student_Student1`
    FOREIGN KEY (`StudentId`)
    REFERENCES `bibloteca`.`Student` (`StudentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `bibloteca`.`Book`
-- -----------------------------------------------------
START TRANSACTION;
USE `bibloteca`;
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 1', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 2', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 3', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 4', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 5', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 6', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Harry Potter 7', 'Salamandra', 'Fantasia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Las Flores del Mal', 'Losada', 'Poesia');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'La Divina Comedia', 'Terramar', 'Ficcion');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'El Universo: Gu√≠a de viaje', 'Planeta', 'Autoayuda');
INSERT INTO `bibloteca`.`Book` (`BookId`, `BookTitle`, `BookPublisher`, `BookArea`) VALUES (DEFAULT, 'Spring MicroServices In Action', 'Manning', 'Internet');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bibloteca`.`Author`
-- -----------------------------------------------------
START TRANSACTION;
USE `bibloteca`;
INSERT INTO `bibloteca`.`Author` (`AuthorId`, `AuthorName`, `AuthorNationality`) VALUES (DEFAULT, 'Oliver Berry', 'Estadounidense');
INSERT INTO `bibloteca`.`Author` (`AuthorId`, `AuthorName`, `AuthorNationality`) VALUES (DEFAULT, 'J. K. Rowling', 'Britanica');
INSERT INTO `bibloteca`.`Author` (`AuthorId`, `AuthorName`, `AuthorNationality`) VALUES (DEFAULT, 'Charles Baudelaire', 'Francesa');
INSERT INTO `bibloteca`.`Author` (`AuthorId`, `AuthorName`, `AuthorNationality`) VALUES (DEFAULT, 'Dante Alighieri', 'Italiana');
INSERT INTO `bibloteca`.`Author` (`AuthorId`, `AuthorName`, `AuthorNationality`) VALUES (DEFAULT, 'John Carnell', 'Estadounidense');

COMMIT;


-- -----------------------------------------------------
-- Data for table `bibloteca`.`BookAuthor`
-- -----------------------------------------------------
START TRANSACTION;
USE `bibloteca`;
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 1, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 2, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 3, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 4, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 5, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 6, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 7, 2);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 8, 3);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 9, 4);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 10, 1);
INSERT INTO `bibloteca`.`BookAuthor` (`BookAuthorId`, `BookId`, `AuthorId`) VALUES (DEFAULT, 11, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bibloteca`.`Student`
-- -----------------------------------------------------
START TRANSACTION;
USE `bibloteca`;
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Matias', 'Monastirsky', 'tu casa', 'Informatica', 25);
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Matias', 'Lamela', 'mi casa', 'Informatica', 30);
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Jorge', 'Tanos', 'la casa de tanos', 'Titan', 35);
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Marcos', 'Costa', 'La casa del negro', 'Informatica', 15);
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Jorgi', 'Castagno', 'La casa de jorgi', 'Letras', 29);
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Mailu', 'Arcuri', 'La casa de mailu', 'Arquitectura', 28);
INSERT INTO `bibloteca`.`Student` (`StudentId`, `StudentName`, `StudentLastname`, `StudentAddress`, `StudentCarreer`, `StudentAge`) VALUES (DEFAULT, 'Filippo', 'Galli', 'En la heladeria', 'Gastronomia', 52);

COMMIT;


-- -----------------------------------------------------
-- Data for table `bibloteca`.`Borrow`
-- -----------------------------------------------------
START TRANSACTION;
USE `bibloteca`;
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 11, 1, '2022-06-10', '2022-06-12', 0);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 11, 2, '2022-06-10', '2022-06-15', 1);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 2, 2, '2022-07-15', '2022-08-11', 0);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 11, 3, '2021-07-12', '2021-07-16', 1);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 2, 4, '2021-07-11', '2021-07-16', 0);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 5, 6, '2021-05-12', '2021-07-16', 1);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 5, 7, '2021-05-12', '2021-07-16', 1);
INSERT INTO `bibloteca`.`Borrow` (`BorrowId`, `BookId`, `StudentId`, `BorrowStartDate`, `BorrowReturnDate`, `BorrowReturned`) VALUES (DEFAULT, 4, 7, '2021-05-12', '2021-07-16', 1);

COMMIT;
 
SELECT AuthorName as name FROM Author;

SELECT StudentName as name, StudentAge as age FROM Student;

SELECT * FROM Student
WHERE StudentCarreer LIKE "Informatica";

SELECT * FROM Author
WHERE AuthorNationality LIKE "francesa"
OR AuthorNationality LIKE "italiana";

SELECT * FROM Book
WHERE NOT BookArea = "Internet";

SELECT * FROM Book
WHERE BookPublisher = "Salamandra";

SELECT * FROM Student
WHERE StudentAge > (SELECT AVG(StudentAge) FROM STUDENT);

SELECT * FROM Student
WHERE StudentLastname LIKE "G%";

-- Listar los autores del libro ‚ÄúEl Universo: Gu√≠a de viaje‚Äù. (Se debe listar solamente los nombres).
-- El Universo: Gu√≠a de viaje
SELECT a.AuthorName as name FROM Author as a
JOIN BookAuthor as ba ON  (a.AuthorId = ba.AuthorId )
JOIN Book as b ON (ba.BookId = b.BookId)
WHERE b.BookTitle = "El Universo: Gu√≠a de viaje";

SELECT b.BookTitle FROM Student as s
JOIN Borrow as bo ON s.StudentId = bo.StudentId
JOIN Book as b ON b.BookId = bo.BookId
WHERE s.StudentName = "Filippo" AND s.StudentLastname = "Galli";

SELECT s.StudentName FROM Student as s
ORDER BY s.StudentAge ASC
LIMIT 1;

SELECT CONCAT(s.StudentName, " ", s.StudentLastname) FROM Student as s
JOIN Borrow as bo ON s.StudentId = bo.StudentId
JOIN Book as b ON b.BookId = bo.BookId
GROUP BY s.StudentId;

SELECT b.BookTitle FROM Author as a
JOIN BookAuthor as ba ON  a.AuthorId = ba.AuthorId 
JOIN Book as b ON ba.BookId = b.BookId
WHERE a.AuthorName =  "J. K. Rowling";

EXPLAIN SELECT b.BookTitle FROM Student as s
JOIN Borrow as bo ON s.StudentId = bo.StudentId
JOIN Book as b ON b.BookId = bo.BookId
WHERE bo.BorrowReturnDate = "2021-07-16"
AND BorrowReturned = 0;
